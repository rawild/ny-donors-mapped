{"version":3,"sources":["style/colors.js","components/legends.js","components/map.js","components/layers.js","components/layerMap.js","components/table.js","data/top_100_tracts_contributions.csv","components/donorMap.js","components/pieChart.js","components/pieChartPanel.js","components/barChart.js","data/top_10_countries.csv","components/geocodingPanel.js","data/states_donors_sum.csv","components/statesPanel.js","components/quintilePanel.js","data/top20_total_recipients.csv","components/stackedBarChart.js","components/recipientsPanel.js","App.js","reportWebVitals.js","index.js"],"names":["colors","Entry","className","style","backgroundColor","this","props","color","range","React","Component","Legend","entries","map","d","value","Legends","Map","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","layers","getToolTips","feature","layer","totalDonated","properties","total_donated","medianIncome","median_inc","DonatedPerPerson","S0101_C01_001E","bindTooltip","getTotalDonatedClass","format","getDonatedPerPersonClass","getMedianIncomeClass","Layers","LayersControl","position","collapsed","BaseLayer","checked","name","GeoJSON","data","census_tracts","f","fillColor","colorsarray","getColor","weight","opacity","fillOpacity","getTotalDonatedStyle","onEachFeature","getPerPersonStyle","getMedianIncomeStyle","LayerMap","state","colorData","key","setState","onButtonClick","Table","columns","initialState","useTable","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","pageIndex","pageSize","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","i","getRowProps","cells","cell","getCellProps","onClick","disabled","length","DonorMap","selectedTract","d3","top_100_tracts_contributions","then","slice","accessor","Cell","sub_geo_id","tract","on","click","e","target","setStyle","console","log","top_100","top_100_tracts","bind","selectedData","sum","PieChart","chartRef","createRef","width","height","radius","Math","min","pie","sort","arc","innerRadius","outerRadius","arcLabel","arcs","svg","pieClass","append","attr","selectAll","join","indexOf","text","skill","toLocaleString","centroid","call","filter","endAngle","startAngle","drawChart","title","PieChartPanel","percentGeocoded","summarydata","TotalGeocoded","href","NumberOfDonors","AmountOfDonations","BarChart","margin","barClass","remove","x","domain","parseFloat","xAxisAttribute","tickFormat","y","yAxisAttribute","padding","enter","bandwidth","transition","duration","tickSize","drawBar","GeocodingPanel","top_10_countries","countryData","StatesPanel","states_donors_sum","statesData","StatesDonors","QuintilePanel","mi","quintiles","StackedBarChart","margins","top","bottom","left","right","keys","reverse","stack","forEach","v","yScale","xScale","div","yAxis","tickPadding","xAxis","offset","top20total_recipients","drawStackedBar","RecipientsPanel","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d69e8425.chunk.js","sourcesContent":["const colors = {\n    grey:  '#dcd6d6',\n    grey2: '#282c34',\n    // income values\n    green1: '#c7e9c0',\n    green2: '#74c476',\n    green3: '#41ab5d',\n    green4: '#006d2c',\n    green5: '#00441b',\n    // per-person values\n    orange1: '#ffefb5',\n    orange2: '#fed98e',\n    orange3: '#fe9929',\n    orange4: '#d95f0e',\n    orange5: '#993404',\n    //total donated values\n    red1: '#fee0d2',\n    red2: '#fcbba1',\n    red3: '#fb6a4a',\n    red4: '#cb181d',\n    red5: '#67000d'\n\n}\n\nexport {colors}","import React from 'react'\nimport {colors} from '../style/colors.js'\n\nclass Entry extends React.Component{\n    render(){\n        return(\n            <div className='legend-entry'>\n                <div className='legend-box' style={{backgroundColor:this.props.color}}></div><div className='legend-range'>{this.props.range}</div>\n            </div>\n        )\n    }\n}\n\nclass Legend extends React.Component {\n    render() {\n        const entries = this.props.entries.map((d) => {\n            return (\n                <div>\n                <Entry color={d[0]} range={d[1]} />\n               </div>\n            )\n        })\n\n        return(\n            <div className=\"map-legend\" >\n                <div>{this.props.value}</div>\n                <div>{entries}</div>\n            </div>\n        )\n    }\n}\n\n\nclass Legends extends React.Component {\n    \n    render(){\n        return (\n            <div className=\"map-controls\">\n                <Legend entries={[[colors.grey,'$0'],[colors.red1,'$1-$6,945'],[colors.red2,'$6,946-$16,650'],\n                [colors.red3,'$16,651-$35,089'],[colors.red4,'$35,090-$79,884'],[colors.red5,'$79,885-$7,358,771']]} \n                value=\"Total Donations\" />\n                <Legend entries={[[colors.grey,'$0'],[colors.orange1,'$.01-$2.24'],[colors.orange2,'$2.25-$4.87'],\n                [colors.orange3,'$4.88-$9.75'],[colors.orange4,'$9.76-$19.95'],[colors.orange5,'$19.96-$40,344']]} \n                value=\"Donated Per Person\" />\n                <Legend entries={[[colors.grey,'No Data'],[colors.green1,'$1-$44,111'],[colors.green2,'$44,112-$59,340'],\n                [colors.green3,'$59,341-$75,756'],[colors.green4,'$75,757-$99,341'],[colors.green5,'$99,342-$250,001+']]} \n                value=\"Median Household Income\" />\n            </div>\n        )\n    }\n}\n\n\nexport {Legends};","import React from 'react'\nimport { MapContainer, TileLayer } from 'react-leaflet'\n\n\nclass Map extends React.Component {\n    render() {\n        return (\n            <MapContainer center={[42.757790, -76.090889]} zoom={this.props.zoom} scrollWheelZoom={true} >\n                <TileLayer\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                 url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                />\n                {this.props.layers}\n            </MapContainer>\n            );\n    }\n}\n\nexport {Map};","import React from 'react'\nimport { LayersControl, GeoJSON } from 'react-leaflet'\nimport census_tracts from '../data/ny_tract_sum_count_inc_pop'\nimport {format} from 'd3-format'\nimport {colors} from '../style/colors.js'\n\nfunction getTotalDonatedStyle(f){\n    let getColor = (d) => {\n        let colorsarray = [colors.grey,colors.red5,colors.red4,colors.red3,colors.red2,colors.red1]\n        let color = d === 0 ? colorsarray[0] :\n        (d > 79884) ? colorsarray[1] :\n        (d > 35090) ? colorsarray[2] : \n        (d > 16650)  ? colorsarray[3] : \n        (d > 6946)  ? colorsarray[4] : colorsarray[5];\n     return color\n    }\n    return {\n        fillColor: getColor(f.properties.total_donated),\n        weight: 1,\n        opacity: 1,\n        fillOpacity: 0.7,\n        color: '#000000'\n    }\n} \n\nfunction getMedianIncomeStyle(f){\n    let getColor = (d) => {\n        let colorsarray = [colors.grey, colors.green5, colors.green4, colors.green3, colors.green2, colors.green1]\n        let color = d === 0 ? colorsarray[0] :\n        (d > 99342) ? colorsarray[1] :\n        (d > 75757) ? colorsarray[2] : \n        (d > 59341)  ? colorsarray[3] : \n        (d > 44112)  ? colorsarray[4] : colorsarray[5];\n     return color\n    }\n    return {\n        fillColor: getColor(f.properties.median_inc),\n        weight: 1,\n        opacity: 1,\n        fillOpacity: 0.7,\n        color: '#000000'\n    }\n} \n\nfunction getPerPersonStyle(f){\n    let getColor = (d) => {\n        let colorsarray = [colors.grey, colors.orange5, colors.orange4, colors.orange3, colors.orange2, colors.orange1]\n        let color = d === 0 ? colorsarray[0] :\n        (d > 19.95) ? colorsarray[1] :\n        (d > 9.75) ? colorsarray[2] : \n        (d > 4.87)  ? colorsarray[3] : \n        (d > 2.24)  ? colorsarray[4] : colorsarray[5];\n     return color\n    }\n    return {\n        fillColor: getColor(f.properties.total_donated/f.properties.S0101_C01_001E),\n        weight: 1,\n        opacity: 1,\n        fillOpacity: 0.7,\n        color: '#000000'\n    }\n} \n\nfunction getMedianIncomeClass(medianIncome){\n    return medianIncome === 0 ? ' mi-0' :\n    (medianIncome > 99342) ? ' mi-1' :\n    (medianIncome > 75757) ? ' mi-2': \n    (medianIncome > 59341)  ? ' mi-3' : \n    (medianIncome > 44112)  ? ' mi-4' : ' mi-5';\n}\n\nfunction getTotalDonatedClass(totalDonated){\n    return totalDonated === 0 ? 'mi-0' :\n    (totalDonated > 79884) ? 'td-1' :\n    (totalDonated > 35090) ? 'td-2' : \n    (totalDonated > 16650)  ? 'td-3' : \n    (totalDonated > 6946)  ? 'td-4' : 'td-5';\n}\n\nfunction getDonatedPerPersonClass(DonatedPerPerson) {\n    return DonatedPerPerson === 0 ? 'mi-0' :\n    (DonatedPerPerson  > 19.95) ? 'dpp-1' :\n    (DonatedPerPerson  > 9.76) ? 'dpp-2' : \n    (DonatedPerPerson  > 4.88)  ? 'dpp-3' : \n    (DonatedPerPerson  > 2.24)  ? 'dpp-4' : 'dpp-5';\n}\n\nconst getToolTips = (feature,layer) => {\n    let totalDonated = feature.properties.total_donated\n    let medianIncome = feature.properties.median_inc\n    let DonatedPerPerson = feature.properties.S0101_C01_001E >0?feature.properties.total_donated / (feature.properties.S0101_C01_001E):0\n    layer.bindTooltip(`<div class='map1-tooltip'>\n            <div class=${getTotalDonatedClass(totalDonated)}><p class='tooltip-header'>Total Donated:</p>\n            <p class='tooltip-text'>${format(\"$,\")(totalDonated)}</p></div>\n            <div class=${getDonatedPerPersonClass(DonatedPerPerson)}>\n            <p class='tooltip-header'>Donated Per Person:</p>\n            <p class='tooltip-text'>${format(\"$,.2f\")(DonatedPerPerson)}</p></div>\n            <div class=${getMedianIncomeClass(medianIncome)}> <p class='tooltip-header'>Median Household Income:</p>\n            <p class='tooltip-text'>${format(\"$,\")(medianIncome)}</p></div> `)\n\n}\n\nconst Layers = () => {\n    \n\n    return (\n      <>\n        <LayersControl position=\"topright\" collapsed={false}>\n         <LayersControl.BaseLayer checked name=\"Total Donated\">\n            <GeoJSON  data = {census_tracts} style={(f)=>getTotalDonatedStyle(f)} onEachFeature={getToolTips} >\n                </GeoJSON>\n            </LayersControl.BaseLayer>\n          <LayersControl.BaseLayer name=\"Donated Per Person\">\n            <GeoJSON  data = {census_tracts} style={(f)=>getPerPersonStyle(f)} onEachFeature={getToolTips} >\n                </GeoJSON> \n          </LayersControl.BaseLayer>\n          <LayersControl.BaseLayer name=\"Median Household Income\">\n             <GeoJSON  data = {census_tracts} style={(f)=>getMedianIncomeStyle(f)} onEachFeature={getToolTips} >\n                </GeoJSON> \n          </LayersControl.BaseLayer>\n        </LayersControl>\n      </>\n    )\n  }\n  \n  export {Layers};","import React from 'react'\nimport { Legends } from './legends.js'\nimport { Map } from './map.js'\nimport {Layers} from './layers.js'\n\nclass LayerMap extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            colorData: \"\",\n            key: 0,\n        }\n    }\n\n    onButtonClick(d) {\n        const key = this.state.key\n        this.setState(\n            {\n                colorData: d,\n                key: key+1\n            }\n        )\n    }\n\n    render() {\n        const colorData= this.state.colorData\n        const layers = <Layers/>\n        return (\n            <div className=\"dark\">\n                <div className='section-header'>Political Donations vs Median Income</div>\n                <Legends onButtonClick={(d)=>this.onButtonClick(d)} />\n                <div className='tract-map'>\n                    <Map key={this.state.key} colorData={colorData} attribution={colorData} layers={layers} zoom={7}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport {LayerMap};","import React from 'react'\nimport { useTable, useSortBy, usePagination} from 'react-table'\n\nfunction Table({ columns, data, initialState }) {\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        prepareRow,\n        page, \n        canPreviousPage,\n        canNextPage,\n        pageOptions,\n        pageCount,\n        gotoPage,\n        nextPage,\n        previousPage,\n        setPageSize,\n        state: { pageIndex, pageSize },\n    } = useTable(\n      {\n        columns,\n        data,\n        initialState: initialState,\n      },\n      useSortBy,usePagination\n    )\n    \n    \n    return (\n      <>\n      <div>\n        <table {...getTableProps()}>\n          <thead>\n            {headerGroups.map(headerGroup => (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map(column => (\n                  // Add the sorting props to control sorting. For this example\n                  // we can add them into the header props\n                  <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                    {column.render('Header')}\n                    {/* Add a sort direction indicator */}\n                    <span>\n                      {column.isSorted\n                        ? column.isSortedDesc\n                          ? ' 🔽'\n                          : ' 🔼'\n                        : ''}\n                    </span>\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()}>\n          {page.map((row, i) => {\n            prepareRow(row)\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map(cell => {\n                  return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                })}\n              </tr>\n            )\n          })}\n          </tbody>\n        </table>\n        <br />\n        <div className=\"pagination\">\n        <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n          {'<<'}\n        </button>{' '}\n        <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n          {'<'}\n        </button>{' '}\n        <button onClick={() => nextPage()} disabled={!canNextPage}>\n          {'>'}\n        </button>{' '}\n        <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\n          {'>>'}\n        </button>{' '}\n        <br></br>\n        <span>\n          Page{' '}\n            {pageIndex + 1} of {pageOptions.length}\n          {' '}\n        </span>\n        </div>\n        </div>\n      </>\n    )\n  }\n\n  export {Table}","export default __webpack_public_path__ + \"static/media/top_100_tracts_contributions.36ccfb04.csv\";","import React from 'react'\nimport { Map } from './map.js'\nimport { GeoJSON, useMap } from 'react-leaflet'\nimport { Table } from './table.js'\nimport top_100_tracts  from '../data/top_100_tracts'\nimport {colors} from '../style/colors.js'\nimport * as d3 from 'd3'\nimport top_100_tracts_contributions from '../data/top_100_tracts_contributions.csv'\n\n\nclass DonorMap extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            data: [],\n            columns: [],\n            selectedTract: '36119011800',\n        }\n    }\n    componentDidMount() {\n        d3.csv(top_100_tracts_contributions).then((data)=>{\n            this.setState({\n                data: data,\n                columns: data.columns.slice(0,data.columns.length-1).map((d) => {\n                    if (d != 'Donation Amount'){\n                        return ({'Header': d,'accessor': d})\n                    } else {\n                        return ({'Header': 'Donation', accessor: 'Donation Amount', \n                        Cell: ({value})=>d3.format(\"$,.0f\")(value)})\n                    }\n                }),\n            })\n        })\n    }\n\n    getTotalDonatedStyle(f){\n        let getColor = (d) => {\n            let colorsarray = [colors.grey,colors.red5,colors.red4,colors.red3,colors.red2,colors.red1]\n            let color = d === 0 ? colorsarray[0] :\n            (d > 79884) ? colorsarray[1] :\n            (d > 35090) ? colorsarray[2] : \n            (d > 16650)  ? colorsarray[3] : \n            (d > 6946)  ? colorsarray[4] : colorsarray[5];\n         return color\n        }\n        return {\n            fillColor: this.state.selectedTract === f.properties.sub_geo_id?'#FBEEB8':getColor(f.properties.total_donated),\n            weight: this.state.selectedTract === f.properties.sub_geo_id?3:1,\n            opacity: 1,\n            fillOpacity: 0.7,\n            color: this.state.selectedTract === f.properties.sub_geo_id?'#ffa20c':'#000000'\n        }\n    } \n    setSelectedTract(tract){\n        this.setState({\n            selectedTract: tract,\n        })\n    }\n    onEachFeature(feature, layer){\n        const onClick=(e)=>{\n            this.setState({\n                selectedTract: e.target.feature.properties.sub_geo_id\n            })\n            e.target.setStyle(this.getTotalDonatedStyle(e.target.feature))\n            console.log(e)\n            \n        }\n        layer.on({\n            click: onClick\n        })\n    }\n\n\n    render(){\n   \n        const top_100 = <GeoJSON data = {top_100_tracts} style={this.getTotalDonatedStyle.bind(this)} onEachFeature={this.onEachFeature.bind(this)}></GeoJSON>\n        let selectedData=  d3.filter(this.state.data,(d) => d.sub_geo_id === this.state.selectedTract)\n        let sum = d3.sum(selectedData,(d)=>d['Donation Amount'])\n        const columns = this.state.columns\n        return (<div>\n                    <div className='section-header'>Explore the Donors from the Census Tracts with the Most Money Donated</div>\n                    <div className='tract-info'>The selected census tract donated {d3.format(\"$,d\")(sum)} from {selectedData.length} donors in the last 5 years.<br/>\n                    Select another census tract to see it's donors!</div>\n                    <div className='flex-wrapper'>\n                        <div className='donor-map'>\n                            <Map layers = {top_100} zoom={6.5} />\n                        </div>\n                        <div className='donor-table'>\n                        <Table data={selectedData} columns={columns} initialState={{pageIndex:0,pageSize:15}}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"spacer\"/>\n                    <div className=\"spacer\"/>\n                    <div className=\"spacer\"/>\n                </div>)\n    }\n}\n\nexport {DonorMap};","import * as d3 from 'd3'\nimport React from 'react';\nimport {colors} from '../style/colors.js'\n\nclass PieChart extends React.Component {\n    constructor(props) {\n        super(props);\n        this.chartRef = React.createRef();\n    }\n   \n\n    drawChart() {\n        let width = this.props.width,\n            height = this.props.height,\n            radius= Math.min(this.props.width, this.props.height) / 2 * 0.8\n        //get functions need for drawing the chart\n        let pie = d3.pie()\n            .sort(null)\n            .value(d => d.value)\n        let arc = d3.arc()\n            .innerRadius(0)\n            .outerRadius(Math.min(width, height) / 2 - 1)\n        let arcLabel =  d3.arc().innerRadius(radius).outerRadius(radius);\n        console.log(arcLabel)\n        /*let color = d3.scaleOrdinal()\n            .domain(this.props.data.map(d => d.name))\n            .range(d3.quantize(t => d3.interpolateSpectral(t * 0.8 + 0.1), this.props.data.length).reverse())*/\n        let color = (d)=>{\n            if ((d.indexOf('Indiv') >= 0) || (d.indexOf('New York')>=0)){\n                return colors.red3\n            } else {\n                return colors.grey\n            }\n        }\n        const arcs = pie(this.props.data);\n        // append the svg object to the body of the page\n        let svg = d3.select(\".\"+this.props.pieClass)\n                .append(\"svg\")\n                .attr(\"height\", this.props.height)\n                .attr(\"width\", this.props.width)\n                .attr(\"viewBox\", [-width / 2, -height / 2, width, height]);\n\n        svg.append(\"g\")\n            .attr(\"stroke\", \"white\")\n            .selectAll(\"path\")\n            .data(arcs)\n            .join(\"path\")\n            .attr(\"fill\", d => color(d.data.name))\n            .attr(\"d\", arc)\n            .append(\"title\")\n            .text(d => `${d.data.skill}: ${d.data.value.toLocaleString()}`);\n        // Add Labels\n        svg.append(\"g\")\n            .attr(\"font-family\", \"sans-serif\")\n            .attr(\"font-size\", 12)\n            .attr(\"text-anchor\", \"middle\")\n            .selectAll(\"text\")\n            .data(arcs)\n            .join(\"text\")\n            .attr(\"transform\", d => `translate(${arcLabel.centroid(d)})`)\n            .call(text => text.append(\"tspan\")\n                .attr(\"y\", \"-0.4em\")\n                .attr(\"font-weight\", \"bold\")\n                .text(d => d.data.name))\n            .call(text => text.filter(d => (d.endAngle - d.startAngle) > 0.25).append(\"tspan\")\n                .attr(\"x\", 0)\n                .attr(\"y\", \"0.7em\")\n                .attr(\"fill-opacity\", 0.7)\n                .text(d => this.props.format?d3.format(this.props.format)(d.data.value):d.data.value.toLocaleString()));\n        }\n        \n        componentDidMount() {\n            this.drawChart();\n        }\n\n        render(){\n        \n            return (\n            <div>\n                <div className='chart-title'>{this.props.title}</div>\n                <div className={this.props.pieClass}></div>\n            </div>)\n        }\n}\n\nexport {PieChart}","import React from 'react';\nimport { PieChart } from './pieChart.js'\nimport summarydata from '../data/summary_data'\nimport * as d3 from 'd3'\n\n\nclass PieChartPanel extends React.Component {\n    render(){\n        let percentGeocoded = summarydata.TotalGeocoded[0].value/(summarydata.TotalGeocoded[0].value+\n            summarydata.TotalGeocoded[1].value) * 100\n        return (\n            <div>\n                <div className='section-header'>Which Political Donors?</div>\n                <div className='blurb'>This project looks at people who have donated to New York state \n                and local races (not federal) between Jan 2016 and March 2021.\n                It is an investigation into what areas the money comes from, how wealthy those areas are, and who is donating from those areas.\n                The donor data has been cleaned and matched to try to ensure as much accuracy as possible. For more on the donor cleaning process \n                see <a href='https://academicworks.cuny.edu/cgi/viewcontent.cgi?article=5299&context=gc_etds'>my white paper</a>. <br/><br/>\n                In general the donors can be divided into 2 groups: Individual and Organizational. As you can see below individual donors make up a large portion of the overal donor base,\n                but contribute less than half of the total money.\n                </div>\n                <div className='flex-wrapper'>\n                        <PieChart pieClass='donorPie' title={'Number of Donors since 2016'} \n                        data={summarydata.NumberOfDonors} \n                        width={300} height={200} />\n                        <PieChart pieClass='amountPie' title={'Amount Donated since 2016'} \n                        data={summarydata.AmountOfDonations} \n                        width={300} height={200} format={'$,.0f'}/>\n                        <PieChart pieClass='geocodedPie' title={ d3.format('.1f')(percentGeocoded) + '% of Individual Donors Geocoded'} \n                        data={summarydata.TotalGeocoded} \n                        width={300} height={200} />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport {PieChartPanel}","import * as d3 from 'd3'\nimport React from 'react';\nimport {colors} from '../style/colors.js'\n\nclass BarChart extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    drawBar() {\n        let margin = {top: 20, right: 30, bottom: 40, left: 195},\n                    width = this.props.width - margin.left - margin.right,\n                    height = this.props.height - margin.top - margin.bottom;\n        // append the svg object to the body of the page\n        d3.selectAll(\".\"+this.props.barClass).selectAll(\"svg\").remove()\n        let svg = d3.selectAll(\".\"+this.props.barClass)\n                .append(\"svg\")\n                .attr(\"width\", width + margin.left + margin.right)\n                .attr(\"height\", height + margin.top + margin.bottom)\n                .append(\"g\")\n                .attr(\"transform\",\n                \"translate(\" + margin.left + \",\" + margin.top + \")\");\n        // Add X axis\n        let x = d3.scaleLinear()\n                .domain([0, d3.max(this.props.data.map((d)=>parseFloat(d[this.props.xAxisAttribute])))])\n                .range([ 0, width])\n       \n        svg.append(\"g\")\n                .attr(\"transform\", \"translate(0,\" + height + \")\")\n                .attr('class','axis x')\n                .call(d3.axisBottom(x).tickFormat((d) => d3.format(\"$,~s\")(d)))\n                .selectAll(\"text\")\n                .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\n                .style(\"text-anchor\", \"end\");\n        // Add Y axis\n        let y = d3.scaleBand()\n                .range([ 0, height ])\n                .domain(this.props.data.map((d) =>  d[this.props.yAxisAttribute]))\n                .padding(.1);\n      \n        \n        // Add Bars\n        svg.selectAll(\"myRect\")\n                .data(this.props.data)\n                .enter()\n                .append(\"rect\")\n                .on('mouseover', function(){\n                    d3.select(this).style('opacity', 0.5)\n                 })\n                .on('mouseout', function(){\n                    d3.select(this).style('opacity', 1)\n                 })\n                .attr(\"x\", x(0) )\n                .attr(\"y\", (d) => y(d[this.props.yAxisAttribute]))\n                .attr(\"width\", 0)\n                .attr(\"height\", y.bandwidth() -10 )\n                .attr(\"fill\", this.props.fillColor)\n                .transition(d3.transition().duration(1000))\n                .attr(\"width\", (d) => x(parseFloat(d[this.props.xAxisAttribute])))\n        \n        svg.append(\"g\")\n                .attr('class','axis y')\n                .call(d3.axisLeft(y).tickSize(0))\n                .selectAll(\"text\")\n                .attr(\"dy\", null)\n\n        svg.append(\"line\")\n                .attr(\"x1\", x(67981586))\n                .attr(\"y1\", 0)\n                .attr(\"x2\", x(67981586))\n                .attr(\"y2\", height)\n                .style(\"stroke-width\", 1.5)\n                .style(\"stroke\", colors.grey2)\n                .style(\"fill\", \"none\");\n        svg.append(\"text\")\n                 .attr(\"x\",x(67981586)/1.25)\n                 .attr(\"y\",-2)\n                 .attr(\"class\",\"percent-label\")\n                 .text(\"20% of the money\")\n                 \n        }\n        componentDidMount(){\n                this.drawBar()\n        }\n        componentDidUpdate() {\n                this.drawBar()\n        }\n        render(){\n            return (<div>\n                        <div className='chart-title'>{this.props.title}</div>\n                        <div className='spacer' />\n                        <div className={this.props.barClass}></div>\n                    </div>)\n        \n        }\n}\n\nexport {BarChart}","export default __webpack_public_path__ + \"static/media/top_10_countries.20764b22.csv\";","import React from 'react'\nimport { PieChart } from './pieChart.js'\nimport { BarChart } from './barChart.js'\nimport summarydata from '../data/summary_data'\nimport * as d3 from 'd3'\nimport top_10_countries from '../data/top_10_countries.csv'\nimport { colors } from '../style/colors.js'\n\nclass GeocodingPanel extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            data: [],\n        }\n    }\n    componentDidMount() {\n        d3.csv(top_10_countries).then((data)=>{\n            this.setState({\n                data: data,\n            })\n        })\n    }\n\n    render(){\n        const countryData = this.state.data        \n        return(\n            <div>\n                <div className='dark'>\n                    <div className='section-header'>{'Success Geocoding Individual Donors'}</div>\n                    <div className='blurb'>\n                        Geocoding is the process where by addresses are resolved to longitude and latitude, that is: precise points on a map that\n                        can be analyzed. In this project the addresses were first geocoded against the US Census Bureau's geocoding api, which is \n                        free to use but very slow. Because of the large volume (639,722) of addresses, multithreading was used to speed up the process.\n                        Even with six processes running it took over 22 hours to complete the geocoding. An example of the script used can be found here. <br/><br/>\n                        After the US Census geocoding, there were still 95,630 donor addresses that could not be resolved to an geographic coordinate. \n                        These addresses were then geocoded against the HERE geocoder. After this, all but 2,127 were resolved. As shown above, that means \n                        99.7% of the donors were able to be geocoded. The missing donors contributed $751,881, less than .2% of the total.\n                    </div>\n                </div>\n                <div className='section-header'>{'.02% of the Money came from outside the US'}</div>\n                <div className='blurb'>99.98% of the money ($401.7 Million) came from the US, but here are the other countries with the\n                most donations.</div>\n                <BarChart barClass='countryBar' title={\"Amount Donated from People in Other Countries\"} \n                data={countryData} xAxisAttribute={\"value\"} yAxisAttribute={\"name\"}\n                width={800} height={400} fillColor={colors.red3}/>\n\n            </div>\n        )\n    }\n}\n\nexport {GeocodingPanel}","export default __webpack_public_path__ + \"static/media/states_donors_sum.a49e4dae.csv\";","import React from 'react'\nimport { PieChart } from './pieChart.js'\nimport summarydata from '../data/summary_data'\nimport * as d3 from 'd3'\nimport states_donors_sum from '../data/states_donors_sum.csv'\nimport { Table } from './table.js'\n\nclass StatesPanel extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            data: [],\n            columns: [{'Header':'Loading','accessor':('loading')}]\n        }\n    }\n    componentDidMount() {\n        d3.csv(states_donors_sum).then((data)=>{\n            this.setState({\n                data: data,\n                columns: data.columns.map((d) => {\n                    if (d === \"Total Donated\") {\n                        return ({'Header': d,'accessor': d,\n                        Cell: ({value})=>d3.format(\"$,.0f\")(value)})\n                    }else if (d === \"Number of Donors\"){\n                        return ({'Header': d,'accessor': d,\n                        Cell: ({value})=>d3.format(\",d\")(value)})\n                    } else {\n                        return ({'Header': d,'accessor': d})\n                    }\n                })\n            })\n        })\n    }\n\n    render(){\n        console.log(\"state\",this.state)\n        const statesData = this.state.data  \n        const columns = this.state.columns      \n        return(\n            <div>\n                <div className='section-header'>{'Donors Across the US'}</div>\n                <div className='blurb'>Most of the donations come from New York. The rest are adjacent states or populous states. Notable exceptions \n                to this include Arkansas, where 239 donors contributed more than $7 million, and the District of Columbia. </div>\n                <div className='flex-wrapper'>\n                    <PieChart pieClass='statePie' title={ '84% of Donations Came from New York'} \n                    data={summarydata.StatesDonors} \n                    width={500} height={200} format={\"$,.0f\"} />\n                    <Table data={statesData} columns={columns} initialState={{pageIndex:0,pageSize:10}}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport {StatesPanel};","import React from 'react'\nimport { BarChart } from './barChart'\nimport quintiles from '../data/tract_quintile'\nimport {colors} from '../style/colors.js'\n\n\nclass QuintilePanel extends React.Component {\n    getColor(d){\n        let mi = d[\"Median Income \"] \n        if (mi.indexOf(\"$1-$44,111\")>-1){\n            return colors.green1\n        } \n        if (mi.indexOf(\"$44,112-$59,340\") > -1){\n            return colors.green2\n        }\n        if (mi.indexOf(\"$59,341-$75,576\") > -1){\n            return colors.green3\n        }\n        if (mi.indexOf(\"$75,757-$99,341\") > -1){\n            return colors.green4\n        }\n\n        return colors.green5\n        \n    }\n    render(){\n        return(\n            <div>\n                <div className='dark'><div className='section-header'>Analysis of Donors by Income with Census Data</div>\n                <div className='blurb'>To analyze the class of these individual donors, the donors were grouped by census tract. \n                Those census tracts provide a median income as a proxy for the wealth of the individual. I've divided the census tracts up into quintiles,\n                so each bracket represents 20% of the census tracts and roughly 20% of the population. As you can see below, more than\n                half (54%) of the money donated came from donors that lived in the most wealthy areas. If you look at people living in the top\n                two wealthiest tiers, the donations comprise 72%, almost three quarters, of the donors. Interestingly the lowest income bracket\n                donated more than the second lowest. This reveals a limitation of this method, where some of the lowest income census brackets\n                like central Albany, still house offices for lobbyists. You can explore in more detail below.<br/><br/>\n                The census data used for median income comes from the 2019 ACS survey. It was accessed via the US Census API.</div>\n                </div>\n                <div className='section-header'>The Wealthiest 20% of the Population Contributes more than 50% of the Money</div>\n                <div className='blurb'>Each bar represents a quintile of the population (20%). As you can see, the \n                donations are not proportional to the populations.</div>\n                <BarChart barClass='quintileBar' data={quintiles}  title={\"Amount Donated by Median Income within NY\"} \n                xAxisAttribute={\"Total Donated\"} yAxisAttribute={\"Median Income \"}\n                width={800} height={400} fillColor={(d)=>this.getColor(d)} />\n            </div>\n        )\n    }\n}\n\nexport {QuintilePanel}","export default __webpack_public_path__ + \"static/media/top20_total_recipients.65bb56f0.csv\";","import React from 'react'\nimport * as d3 from 'd3'\nimport { colors } from '../style/colors';\nimport top20total_recipients from '../data/top20_total_recipients.csv'\n\nclass StackedBarChart extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            margins: { top: 70, bottom: 20, left: 500, right: 20 },\n            format: d3.format(\",.\" + d3.precisionFixed(1) + \"f\"),\n            data: []\n        }\n    }\n\n    getColor(d){\n        if (d === 'Lowest Income'){\n            return colors.green1\n        }\n        if (d === 'Low Income'){\n            return colors.green2\n        }\n        if (d === 'Middle Income'){\n            return colors.green3\n        }\n        if (d === 'High Income'){\n            return colors.green4\n        }\n        if (d === 'Highest Income'){\n            return colors.green5\n        }\n    }\n\n    drawStackedBar(){\n        console.log('top stacked bar', this.state)\n       \n        let keys = this.state.data.columns.slice(1).reverse()\n        let stack = d3\n              .stack()\n              .keys(keys)\n              (this.state.data)\n              .map(d => (d.forEach(v => v.key = d.key), d))\n        console.log(this.state.data.map((d)=>d[this.props.yAxisAttribute]))\n        let yScale = d3\n            .scaleBand()\n            .domain(this.state.data.map((d)=>d[this.props.yAxisAttribute]))\n            .range([this.state.margins.top,this.props.height-this.state.margins.bottom])\n            .padding(0.3)\n        let xScale = d3\n            .scaleLinear()\n            .domain([0,16200000])\n            .range([this.state.margins.left, this.props.width - this.state.margins.right]);\n        let div = d3.selectAll(\".\"+this.props.barClass).append(\"div\")\n            .attr(\"class\", \"barchart\")\n            .append(\"svg\")\n            .attr(\"width\", this.props.width)\n            .attr(\"height\", this.props.height)\n            \n        div.append(\"g\")\n            .selectAll(\"g\")\n            .data(stack)\n            .join(\"g\")\n                .attr(\"fill\", d =>this.getColor(d.key))\n                .attr(\"data-legend\",function(d) { return d.key})\n            .selectAll(\"rect\")\n            .data(d=>d)\n            .join(\"rect\")\n                .attr(\"x\", (d) => xScale(d[0]))\n                .attr(\"y\", (d) => yScale(d.data[this.props.yAxisAttribute]))\n                .attr(\"width\", d => xScale(d[1]) - xScale(d[0]))\n                .attr(\"height\", yScale.bandwidth())\n    \n\n        const yAxis = d3.axisLeft(yScale).tickSize(1).tickPadding(10);\n        const xAxis = d3.axisTop(xScale)\n        div.append(\"g\")\n            .attr(\"class\", \"axis\")\n            .attr(\"transform\", `translate(${xScale(this.state.margins.left)},0)`)\n            .call(yAxis)\n        \n        div.append(\"g\")\n            .attr(\"transform\", `translate(0,${0 + this.state.margins.top})`)\n            .call(xAxis.tickFormat((d) => d3.format(\"$,~s\")(d)))\n\n        div.append(\"g\")\n            .attr(\"class\",\"legend\")\n            .selectAll(\"rect\")\n            .data(keys.reverse())\n            .join(\"rect\")\n                .attr(\"fill\", d =>this.getColor(d))\n                .attr(\"x\", (d,i)=>15+(40*i+20*(i+1)))\n                .attr(\"y\",30)\n                .attr(\"width\",40)\n                .attr(\"height\",20)\n         \n        let offset = [15,100,155,220,255]\n        div.append(\"g\")\n            .selectAll(\"text\")\n            .data(['Lowest Income','Low','Middle','High','Highest Income'])\n            .join(\"text\")\n                .attr(\"class\",\"legend\")\n                .attr(\"x\", (d,i)=>offset[i]+5)\n                .attr(\"y\",25)\n                .attr(\"width\",60)\n                .attr(\"height\",2)\n                .text(d => d)\n            \n\n        \n    }\n\n    componentDidMount(){\n        d3.csv(top20total_recipients).then((data)=>{\n            this.setState({\n                data:data\n            })\n            this.drawStackedBar()\n        })\n    }\n\n    \n    /**\n     * React to state changes and render the component's HTML\n     *\n     * @returns {void}\n     */\n    render() {\n       return (\n           <div>\n            <div>{this.props.title}</div>\n            <div className={this.props.barClass}></div>\n           </div>\n       )\n    }\n}\n\n\nexport {StackedBarChart}","import React from 'react'\nimport { StackedBarChart } from './stackedBarChart.js'\n\nclass RecipientsPanel extends React.Component{\n    render(){\n        return(\n            <div>\n                <div className='section-header'>Who gets this money?</div>\n                    <div className='blurb'>Below are the recipients who recieved the most donations from these individual donors. \n                    As you can see almost all of them get the majority of their donations from the highest income areas. Andrew Cuomo\n                    gets the most money by far. Interestingly many of them get more money from the lowest income areas than from \n                    low income areas, which I attribute to the above effect where downtown Albany is a lowest income area and also \n                    home to many lobbyist offices.\n                    </div>\n                <StackedBarChart barClass={'recipientsBar'} yAxisAttribute={'Name '} height={600} width={1000} \n                title={'The Donations by Income to Biggest Recipients'}/>\n            </div>\n        )\n    }\n}\n\nexport {RecipientsPanel}","import './App.css';\nimport { LayerMap } from './components/layerMap.js'\nimport { DonorMap } from './components/donorMap.js'\nimport { PieChartPanel } from './components/pieChartPanel.js'\nimport { GeocodingPanel } from './components/geocodingPanel.js'\nimport { StatesPanel } from './components/statesPanel.js'\nimport { QuintilePanel } from './components/quintilePanel';\nimport { RecipientsPanel } from './components/recipientsPanel';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n         Mapping New York Political Donors\n        </p>\n      </header>\n      <PieChartPanel />\n      <GeocodingPanel />\n      <StatesPanel />\n      <QuintilePanel />\n      <LayerMap />\n      <RecipientsPanel />\n      <DonorMap />\n      <div className=\"App-header\"><p>That's All Folks!</p></div>\n     \n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}